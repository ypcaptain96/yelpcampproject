<% include ../partials/header %>

<body class="pageForm">
    <div class="row">
    <div class="col-md-6 col-md-offset-3">
      <div class="row">
        <div id="formDiv">
          
           <h1 style="text-align: center">Edit <strong><%= campground.name %></strong></h1>
                  <form action="/campgrounds/<%=campground._id%>?_method=PUT" method="POST" autocomplete="off">
                <div class="form-group">
                    <label for="name">Name</label>
                    <input class="form-control" type="text" name="name" id="name" value="<%= campground.name %>">
                </div>
                
                <div class="form-group">
                    <label for="price">Price</label>
                    <input class="form-control" type="number" name="price" id="price" value="<%= campground.price %>" step="0.01" min="0" required>
                </div>
                
                <div class="form-group">
                    <label for="location">Location</label>
                    <input id="pac-input" class="form-control controls" type="text" name="location" id="location" value="<%= campground.location %>" placeholder="Location">
                </div>
                
                <div class="form-group">
                    <label for="image">Image URL</label>
                    <input class="form-control" type="text" name="image" id="image" value="<%= campground.image %>">
                </div>
                
                <div class="form-group">
                    <label for="description">Description</label>
                    <input class="form-control" type="text" name="description" id="description" value="<%= campground.description %>">
                </div>
                
                <div class="form-group">
                    <button class="btn btn-lg btn-primary btn-block">Update!</button>
                </div>
                
                <div class="hr"></div>
                  <div class="foot-lnk">
                    <p> 
                      <a href="/campgrounds"> Go to Campgrounds Page! </a>
                    </p>
                </div>
                
            </form>
          <div class="clearfix"></div>
        </div>
      </div>
    </div>
    
         <div style="display: none">
        <!-- Must Be Here, Needed For The Auto Complete To Work-->
            <div id="map"></div>
        </div>
    
  </div>
  
<script>
      // This example adds a search box to a map, using the Google Place Autocomplete
      // feature. People can enter geographical searches. The search box will return a
      // pick list containing a mix of places and predicted search terms.

      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

      function initAutocomplete() {
        var map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: -33.8688, lng: 151.2195},
          zoom: 13,
          mapTypeId: 'roadmap'
        });

        // Create the search box and link it to the UI element.
        var input = document.getElementById('pac-input');
        var searchBox = new google.maps.places.SearchBox(input);

        // Bias the SearchBox results towards current map's viewport.
        map.addListener('bounds_changed', function() {
          searchBox.setBounds(map.getBounds());
        });

        var markers = [];
        // Listen for the event fired when the user selects a prediction and retrieve
        // more details for that place.
        searchBox.addListener('places_changed', function() {
          var places = searchBox.getPlaces();

          if (places.length == 0) {
            return;
          }

          // Clear out the old markers.
          markers.forEach(function(marker) {
            marker.setMap(null);
          });
          markers = [];

          // For each place, get the icon, name and location.
          var bounds = new google.maps.LatLngBounds();
          places.forEach(function(place) {
            if (!place.geometry) {
              console.log("Returned place contains no geometry");
              return;
            }
            var icon = {
              url: place.icon,
              size: new google.maps.Size(71, 71),
              origin: new google.maps.Point(0, 0),
              anchor: new google.maps.Point(17, 34),
              scaledSize: new google.maps.Size(25, 25)
            };

            // Create a marker for each place.
            markers.push(new google.maps.Marker({
              map: map,
              icon: icon,
              title: place.name,
              position: place.geometry.location
            }));

            if (place.geometry.viewport) {
              // Only geocodes have viewport.
              bounds.union(place.geometry.viewport);
            } else {
              bounds.extend(place.geometry.location);
            }
          });
          map.fitBounds(bounds);
        });
      }

    </script>
    
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCs1-hH9pmRmC2tdD-EM8vfzt8qHDURqV8&libraries=places&callback=initAutocomplete"></script>

    
<% include ../partials/footer %>